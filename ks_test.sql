CALL DATA_AGGREGATOR('BI_TEST._TABLE_LOADING.BUYSIDE_ACCOUNT_DATA_INCOMPLETE_DETECTOR_LOADING', 0);

SELECT DATA_DATE
    ,COUNT(*) CNT
    ,SUM(SPEND) SPEND
FROM BI_TEST._TABLE_LOADING.BUYSIDE_ACCOUNT_DATA_INCOMPLETE_DETECTOR_LOADING
GROUP BY DATA_DATE
ORDER BY DATA_DATE DESC
LIMIT 15
;

DELETE FROM BI_TEST._TABLE_LOADING.BUYSIDE_ACCOUNT_DATA_INCOMPLETE_DETECTOR_LOADING
WHERE DATA_DATE IN ('2020-06-01','2020-06-06')
;


CREATE OR REPLACE VIEW KS_TEST
AS
WITH SCOPED AS (
    SELECT SEGMENT_ID
        --,PRODUCT_LINE_ID
        ,NETWORK_ID
        ,ACCOUNT_ID
        ,DAYSHIFT_ID
        ,SUM(SPEND) SPEND
    FROM BI_TEST._TABLE_LOADING.BUYSIDE_ACCOUNT_DATA_INCOMPLETE_DETECTOR_SEGMENT
    WHERE SEGMENT_ID IN (0,1)
    GROUP BY SEGMENT_ID
         --,PRODUCT_LINE_ID
         ,NETWORK_ID
         ,ACCOUNT_ID
         ,DAYSHIFT_ID
    )
  ,FULL_MAP AS (
    SELECT *
    FROM (SELECT SEGMENT_ID, DAYSHIFT_ID FROM SCOPED WHERE SEGMENT_ID IN (0,1) GROUP BY SEGMENT_ID, DAYSHIFT_ID) D
        --,(SELECT DISTINCT PRODUCT_LINE_ID FROM SCOPED WHERE SEGMENT_ID IN (0,1)) P
        ,(SELECT NETWORK_ID, ACCOUNT_ID FROM SCOPED WHERE SEGMENT_ID IN (0,1) GROUP BY NETWORK_ID, ACCOUNT_ID) A
    )
  ,FILL_UP AS (
    SELECT GROUPING_ID 
            (A.SEGMENT_ID
            --,A.PRODUCT_LINE_ID
            ,A.NETWORK_ID
            ,A.ACCOUNT_ID
            ,A.DAYSHIFT_ID
            ) GROUP_ID
        ,A.SEGMENT_ID
        --,A.PRODUCT_LINE_ID
        ,A.NETWORK_ID
        ,A.ACCOUNT_ID
        ,A.DAYSHIFT_ID
        ,COALESCE(SUM(B.SPEND),0) SPEND
    FROM FULL_MAP A
    LEFT JOIN SCOPED B
    ON A.SEGMENT_ID = B.SEGMENT_ID
    --AND A.PRODUCT_LINE_ID = B.PRODUCT_LINE_ID
    AND A.NETWORK_ID = B.NETWORK_ID
    AND A.ACCOUNT_ID = B.ACCOUNT_ID
    AND A.DAYSHIFT_ID = B.DAYSHIFT_ID
    GROUP BY GROUPING SETS (
        (A.SEGMENT_ID
         --,A.PRODUCT_LINE_ID
         ,A.NETWORK_ID
         ,A.ACCOUNT_ID
        ),
        (A.SEGMENT_ID
         --,A.PRODUCT_LINE_ID
         ,A.NETWORK_ID
         ,A.ACCOUNT_ID
         ,A.DAYSHIFT_ID
        )
      )
    )
  ,NORMALIZED AS (
    SELECT COALESCE(A.SEGMENT_ID, B.SEGMENT_ID) SEGMENT_ID
        --,COALESCE(A.PRODUCT_LINE_ID, B.PRODUCT_LINE_ID) PRODUCT_LINE_ID
        ,COALESCE(A.NETWORK_ID, B.NETWORK_ID) NETWORK_ID
        ,COALESCE(A.ACCOUNT_ID, B.ACCOUNT_ID) ACCOUNT_ID
        ,COALESCE(A.DAYSHIFT_ID, B.DAYSHIFT_ID) DAYSHIFT_ID
        ,COALESCE(B.SPEND/NULLIF(A.SPEND,0),0) N_SPEND
    FROM (
      SELECT *
      FROM FILL_UP
      WHERE GROUP_ID = 1
      ) A
    JOIN (
      SELECT *
      FROM FILL_UP
      WHERE GROUP_ID = 0
      ) B
    ON A.SEGMENT_ID = B.SEGMENT_ID
    --AND A.PRODUCT_LINE_ID = B.PRODUCT_LINE_ID
    AND A.NETWORK_ID = B.NETWORK_ID
    AND A.ACCOUNT_ID = B.ACCOUNT_ID
    )
  ,ECDF_HIS AS (
      SELECT A.SEGMENT_ID
         --,A.PRODUCT_LINE_ID
         ,A.NETWORK_ID
         ,A.ACCOUNT_ID
         ,A.DAYSHIFT_ID
         ,SUM(B.N_SPEND) T_SPEND
      FROM NORMALIZED A
      JOIN NORMALIZED B
      ON A.SEGMENT_ID = B.SEGMENT_ID
        --AND A.PRODUCT_LINE_ID = B.PRODUCT_LINE_ID
        AND A.NETWORK_ID = B.NETWORK_ID
        AND A.ACCOUNT_ID = B.ACCOUNT_ID
        AND A.DAYSHIFT_ID >= B.DAYSHIFT_ID
      WHERE A.SEGMENT_ID = 1
      GROUP BY A.SEGMENT_ID
         --,A.PRODUCT_LINE_ID
         ,A.NETWORK_ID
         ,A.ACCOUNT_ID
         ,A.DAYSHIFT_ID
    )
  ,ECDF_CUR AS (
      SELECT A.SEGMENT_ID
         --,A.PRODUCT_LINE_ID
         ,A.NETWORK_ID
         ,A.ACCOUNT_ID
         ,A.DAYSHIFT_ID
         ,SUM(B.N_SPEND) T_SPEND
      FROM NORMALIZED A
      JOIN NORMALIZED B
      ON A.SEGMENT_ID = B.SEGMENT_ID
        --AND A.PRODUCT_LINE_ID = B.PRODUCT_LINE_ID
        AND A.NETWORK_ID = B.NETWORK_ID
        AND A.ACCOUNT_ID = B.ACCOUNT_ID
        AND A.DAYSHIFT_ID >= B.DAYSHIFT_ID
      WHERE A.SEGMENT_ID = 0
      GROUP BY A.SEGMENT_ID
         --,A.PRODUCT_LINE_ID
         ,A.NETWORK_ID
         ,A.ACCOUNT_ID
         ,A.DAYSHIFT_ID
    )
  ,DIFFERENCE AS (
     SELECT COALESCE(E.DAYSHIFT_ID, O.DAYSHIFT_ID) DAYSHIFT_ID
        --,COALESCE(E.PRODUCT_LINE_ID, O.PRODUCT_LINE_ID) PRODUCT_LINE_ID
        ,COALESCE(E.NETWORK_ID, O.NETWORK_ID) NETWORK_ID
        ,COALESCE(E.ACCOUNT_ID, O.ACCOUNT_ID) ACCOUNT_ID
        ,COALESCE(O.T_SPEND,0) O_SPEND
        ,COALESCE(E.T_SPEND,0) E_SPEND
        ,COALESCE(E.T_SPEND,0) - COALESCE(O.T_SPEND,0) T_DIFF
    FROM ECDF_CUR O
    JOIN ECDF_HIS E
    ON E.DAYSHIFT_ID = O.DAYSHIFT_ID
      --AND E.PRODUCT_LINE_ID = O.PRODUCT_LINE_ID
      AND E.NETWORK_ID = O.NETWORK_ID
      AND E.ACCOUNT_ID = O.ACCOUNT_ID
    ORDER BY DAYSHIFT_ID
        --,PRODUCT_LINE_ID
        ,NETWORK_ID
        ,ACCOUNT_ID
  )
  ,D_VALUES AS (
    SELECT 1.07*SQRT((14+7)/(14*7)) C_VALUE
        ,MAX(ABS(T_DIFF)) D_VALUE
        --,PRODUCT_LINE_ID
        ,NETWORK_ID
        ,ACCOUNT_ID
    FROM DIFFERENCE
    GROUP BY ''
        --,PRODUCT_LINE_ID
        ,NETWORK_ID
        ,ACCOUNT_ID
    ORDER BY ''
        --,PRODUCT_LINE_ID
        ,NETWORK_ID
        ,ACCOUNT_ID
    )
   SELECT A.D_VALUE
        ,B.*
   FROM D_VALUES A
   LEFT JOIN (
      SELECT *
      FROM FILL_UP
      WHERE GROUP_ID = 0
      AND SEGMENT_ID = 0
      ) B
    ON 
    --A.PRODUCT_LINE_ID = B.PRODUCT_LINE_ID
    --AND 
    A.NETWORK_ID = B.NETWORK_ID
    AND 
    A.ACCOUNT_ID = B.ACCOUNT_ID
;


WITH FILTER AS (
    SELECT NETWORK_ID
        ,ACCOUNT_ID
        --,SUM(SPEND) SPEND
    FROM BI_TEST._CONTROL_LOGIC.KS_TEST
    GROUP BY NETWORK_ID
        ,ACCOUNT_ID
    HAVING SUM(SPEND) > 100
    )
SELECT A.NETWORK_ID
    ,A.ACCOUNT_ID
    ,A.DAYSHIFT_ID
    ,A.SPEND
    ,A.D_VALUE
FROM BI_TEST._CONTROL_LOGIC.KS_TEST A
JOIN FILTER B USING(NETWORK_ID,ACCOUNT_ID)
ORDER BY A.NETWORK_ID
    ,A.ACCOUNT_ID
    ,A.DAYSHIFT_ID DESC
    ,A.SPEND
;
